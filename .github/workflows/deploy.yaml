name: Build and deploy an app to AKS

on:
  push:
    branches: main

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  TF_VAR_resource_group_location: ${{ vars.RG_LOCATION }}
  TF_VAR_resource_group_name: ${{ vars.RG_NAME }}
  TF_VAR_aks_service_principal_app_id: ${{ secrets.AZURE_CLIENT_ID }}
  TF_VAR_aks_service_principal_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}

jobs:
  tf_deploy:
    name: Deploy into Azure
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate SSH Key
        run: |
          ssh-keygen -t rsa -N '' -f /home/runner/.ssh/id_rsa

      - uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init -backend-config=tf-backend.hcl

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve

  deploy_to_aks:
    runs-on: ubuntu-latest
    needs: [ tf_deploy ]
    steps:
      # Checks out the repository this file is in
      - uses: actions/checkout@v4

      # Logs in with your Azure credentials
      - uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ vars.RG_NAME }}
          cluster-name: k8sguru
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys application based on given manifest file
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: [flask_pod.yaml, mlflow_pod.yaml]